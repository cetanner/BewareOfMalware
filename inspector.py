#
# The purpose of this program is to scan the system for any suspicious
# processes and display them to the user
#
#
import tkinter as tk
import psutil as ps
import os

PROC_LIST = []
#database = open('database.txt', 'r')
#for line in database:
    #PROC_LIST.append()
    
def scan():
    # Captures all running processes and iterates through them
    runningProcesses = ps.process_iter() 
    info = tk.Text(master=window)
    info.grid(row=1, column=0)    
    for process in runningProcesses:
        
        # Tries to access the process' attributes
        try:
            name = process.name() 
            ppid = process.ppid() 
            exe = process.exe() 
            cmdline = process.cmdline()
            
        except (ps.AccessDenied, ps.NoSuchProcess):
            pass
            
        except FileNotFoundError:
            warning("%s executable could not be found." % (process))
            PROC_LIST.append(process)
            
        else:
            if 'python.exe' in cmdline:
                open_files = process.open_files()
                for file in open_files:
                    if os.path.basename(file.path) == 'virus.py' or os.path.basename(file.path) == 'keylogger.py':
                        # print the name of the process
                        print(file.path)            
                    
         
        info.insert("end-1c", "PID: %d     Name: %s \n" % (process.pid, process.name()))
    print("Suspicious processes: \n")
    for process in PROC_LIST:
        print("PID: %d     Name: %s    Path: %s" % (process.pid, process.name(), process.exe()))
        
def kill(pid):
    
    process = ps.Process(pid)
    process.send_signal(signal.SIGTERM)
    
    

window = tk.Tk()
window.title("BewareOfMalware")
window.columnconfigure(0, minsize=500)
window.rowconfigure([0, 1], minsize=350)

scan = tk.Button(
    master=window, 
    text="Click to scan processes",
    relief="raised", 
    command=scan
)

scan.grid(row=0, column=0, sticky="new")
for proc in PROC_LIST:
    yes = tk.Button(master=window, text="Yes", relief = "raised", command=lambda: kill(proc))
    yes.grid(row=2, column=0, sticky="sw") 
    no = tk.Button(master=window, text="No", relief = "raised", command="") 
    no.grid(row=2, column=1, sticky="se")

# Packs and runs the scanner window
window.mainloop()




# Stuff to be done: look at getting the info label to contain susprocess info(probably going to have to rewrite scan
# to print to the window instead, maybe have scan return a list of suspicous processes that could be in a format the text
# field would take?). Also finish logic for killing processes and deciding about that
#